import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { useState } from "react";
import axios from "axios";

const Home: NextPage = () => {

  const [imgid, setImgid] = useState("");
  const [finalimg, setFinalimg] = useState("");
  const [finished, setFinished] = useState(false);
  const [loading, setLoading] = useState(false);
  const contractURL = '0xdd467a6c8ae2b39825a452e06b4fa82f73d4253d';
  async function handleReset() {
    setImgid("");
    setFinalimg("");
    setLoading(false);
    setFinished(false);
  }
  const generateImg = async (evt: any) => {
      evt.preventDefault();
      if (Number(imgid) > 0 && Number(imgid) <= 5555 ) {
        setLoading(true);
        var Fcolor = '#0000'
        axios.get(`https://api.opensea.io/api/v1/asset/${contractURL}/${imgid}`).then( async (imageone) => {

            const findColor = async function() {
              imageone.data.traits.find(item => {
              if (item.trait_type === "Background") {
                switch(item.value) {
                  case 'Blue Sea':
                    return Fcolor = '#355a8c'
                  case 'Emerald':
                    return Fcolor = '#26767b'
                  case 'Granola':
                    return Fcolor = '#b19d6c'
                  case 'Graphite':
                    return Fcolor = '#595a63'
                  case 'Ice':
                    return Fcolor = '#80b4c7'
                  case 'Jade Green':
                    return Fcolor = '#28b687'
                  case 'Lavender':
                    return Fcolor = '#b9abe0'
                  case 'Mars':
                    return Fcolor = '#ed7c8b'
                  case 'Peach':
                    return Fcolor = '#ff936c'
                  case 'Sand':
                    return Fcolor = '#decf74'
                  case 'Sky':
                    return Fcolor = '#4bc7e7'
                  case 'Violet':
                    return Fcolor = '#6a5f95'
                  default:
                    return Fcolor = '#6a5f95'
                }
              }
            })
          }

            await findColor().then(async () => {
              let data = {
                imageonedata: imageone.data.image_url,
                imageonecol: Fcolor,
              };
              await axios
                .post("/api/gen", data, {
                  headers: {
                    "Content-Type": "application/json",
                  },
                })
                .then(async (response) => {
                  setFinalimg(String(response.data));
                  setLoading(false);
                  setFinished(true);
                }); 
              }) 
          
           
            
          
          })

        
          
        
      } else {
        return alert(
          "Check to make sure crop method is selected, and valid Piece Number (ex. 141) is selected less than 5,555."
        );
      }
    };
  return (
<div>
      <Head>
        <title>MCV Banner Tool</title>
        <meta
          name="description"
          content="Show off MCV characters on your profile with a twitter banner generator!"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
    <div className='pseudobg'>
      <div className="corediv bg-main bg-left-bottom bg-no-repeat bg-contain flex w-screen h-screen justify-center items-center">
        <div className="flex flex-col gap-6 p-4 sm:p-8 font-inter text-white flex bg-gray-900 rounded-lg shadow-lg justify-center items-center w-72">
          <div>
            <svg width="163" height="75" viewBox="0 0 163 75" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M94.44 33V21.32H97.544L100.472 28.296H100.76L103.672 21.32H106.824V33H104.568V23.752L101.704 30.616H99.384L96.52 23.8V33H94.44ZM108.554 33L112.538 21.32H116.25L120.346 33H118.01L116.938 29.896H111.85L110.826 33H108.554ZM112.49 27.976H116.282L114.666 23.224H114.074L112.49 27.976ZM122.081 33V21.24H126.417C127.814 21.24 128.929 21.5547 129.761 22.184C130.593 22.8133 131.009 23.768 131.009 25.048V25.32C131.009 26.1947 130.806 26.9147 130.401 27.48C130.006 28.0453 129.457 28.4613 128.753 28.728L131.873 33H129.217L126.465 29.096H126.417H124.353V33H122.081ZM126.657 23.176H124.353V27.256H126.657C127.275 27.256 127.771 27.0693 128.145 26.696C128.518 26.3227 128.705 25.832 128.705 25.224C128.705 24.616 128.518 24.1253 128.145 23.752C127.771 23.368 127.275 23.176 126.657 23.176ZM137.487 33.304C136.452 33.304 135.577 33.1387 134.863 32.808C134.148 32.4773 133.604 32.024 133.231 31.448C132.868 30.872 132.687 30.2107 132.687 29.464H134.911C134.911 29.784 134.996 30.088 135.167 30.376C135.337 30.664 135.609 30.8987 135.983 31.08C136.367 31.2613 136.868 31.352 137.487 31.352C138.319 31.352 138.943 31.1813 139.359 30.84C139.775 30.4987 139.983 30.0827 139.983 29.592C139.983 29.1867 139.807 28.856 139.455 28.6C139.103 28.344 138.559 28.184 137.823 28.12L136.799 28.04C135.679 27.944 134.783 27.5973 134.111 27C133.449 26.392 133.118 25.592 133.118 24.6C133.118 23.864 133.289 23.224 133.631 22.68C133.983 22.136 134.479 21.72 135.119 21.432C135.759 21.1333 136.505 20.984 137.359 20.984C138.233 20.984 138.991 21.1387 139.631 21.448C140.281 21.7573 140.783 22.1947 141.135 22.76C141.487 23.3147 141.663 23.9707 141.663 24.728H139.439C139.439 24.2587 139.263 23.8427 138.911 23.48C138.569 23.1173 138.052 22.936 137.359 22.936C136.676 22.936 136.169 23.1013 135.839 23.432C135.508 23.7627 135.343 24.152 135.343 24.6C135.343 24.9627 135.471 25.2827 135.727 25.56C135.993 25.8267 136.42 25.9813 137.007 26.024L138.031 26.12C138.863 26.1947 139.588 26.376 140.207 26.664C140.836 26.9413 141.327 27.3253 141.679 27.816C142.031 28.3067 142.207 28.8987 142.207 29.592C142.207 30.328 142.009 30.9787 141.615 31.544C141.231 32.0987 140.687 32.5307 139.983 32.84C139.279 33.1493 138.447 33.304 137.487 33.304ZM99.704 51.304C98.6373 51.304 97.7253 51.1173 96.968 50.744C96.2213 50.3707 95.608 49.8853 95.128 49.288C94.6587 48.6907 94.312 48.0453 94.088 47.352C93.864 46.648 93.752 45.9653 93.752 45.304V44.952C93.752 44.2373 93.864 43.528 94.088 42.824C94.3227 42.1093 94.68 41.464 95.16 40.888C95.64 40.312 96.248 39.8533 96.984 39.512C97.72 39.16 98.6 38.984 99.624 38.984C100.669 38.984 101.587 39.176 102.376 39.56C103.165 39.944 103.795 40.4773 104.264 41.16C104.733 41.8427 105.016 42.6427 105.112 43.56H102.824C102.696 42.76 102.339 42.152 101.752 41.736C101.176 41.3093 100.467 41.096 99.624 41.096C98.8453 41.096 98.1893 41.272 97.656 41.624C97.1333 41.9653 96.7333 42.44 96.456 43.048C96.1893 43.656 96.056 44.3547 96.056 45.144C96.056 45.912 96.1947 46.6 96.472 47.208C96.7493 47.816 97.16 48.3013 97.704 48.664C98.248 49.016 98.9147 49.192 99.704 49.192C100.579 49.192 101.315 48.9787 101.912 48.552C102.52 48.1147 102.888 47.5067 103.016 46.728H105.304C105.197 47.5707 104.909 48.3387 104.44 49.032C103.981 49.7253 103.352 50.28 102.552 50.696C101.763 51.1013 100.813 51.304 99.704 51.304ZM105.96 51L109.944 39.32H113.656L117.752 51H115.416L114.344 47.896H109.256L108.232 51H105.96ZM109.896 45.976H113.688L112.072 41.224H111.48L109.896 45.976ZM120.807 51V41.32H117.431V39.32H126.455V41.32H123.079V51H120.807ZM131.955 51.304C130.921 51.304 130.046 51.1387 129.331 50.808C128.617 50.4773 128.073 50.024 127.699 49.448C127.337 48.872 127.155 48.2107 127.155 47.464H129.379C129.379 47.784 129.465 48.088 129.635 48.376C129.806 48.664 130.078 48.8987 130.451 49.08C130.835 49.2613 131.337 49.352 131.955 49.352C132.787 49.352 133.411 49.1813 133.827 48.84C134.243 48.4987 134.451 48.0827 134.451 47.592C134.451 47.1867 134.275 46.856 133.923 46.6C133.571 46.344 133.027 46.184 132.291 46.12L131.267 46.04C130.147 45.944 129.251 45.5973 128.579 45C127.918 44.392 127.587 43.592 127.587 42.6C127.587 41.864 127.758 41.224 128.099 40.68C128.451 40.136 128.947 39.72 129.587 39.432C130.227 39.1333 130.974 38.984 131.827 38.984C132.702 38.984 133.459 39.1387 134.099 39.448C134.75 39.7573 135.251 40.1947 135.603 40.76C135.955 41.3147 136.131 41.9707 136.131 42.728H133.907C133.907 42.2587 133.731 41.8427 133.379 41.48C133.038 41.1173 132.521 40.936 131.827 40.936C131.145 40.936 130.638 41.1013 130.307 41.432C129.977 41.7627 129.811 42.152 129.811 42.6C129.811 42.9627 129.939 43.2827 130.195 43.56C130.462 43.8267 130.889 43.9813 131.475 44.024L132.499 44.12C133.331 44.1947 134.057 44.376 134.675 44.664C135.305 44.9413 135.795 45.3253 136.147 45.816C136.499 46.3067 136.675 46.8987 136.675 47.592C136.675 48.328 136.478 48.9787 136.083 49.544C135.699 50.0987 135.155 50.5307 134.451 50.84C133.747 51.1493 132.915 51.304 131.955 51.304ZM97.064 69L93.336 57.32H95.688L98.664 67.112H99.224L101.992 57.32H104.264L100.808 69H97.064ZM111.412 69.304C110.356 69.304 109.439 69.1173 108.66 68.744C107.882 68.3707 107.236 67.8853 106.724 67.288C106.223 66.68 105.85 66.0293 105.604 65.336C105.359 64.632 105.236 63.9547 105.236 63.304V62.952C105.236 62.2373 105.364 61.528 105.62 60.824C105.876 60.12 106.26 59.48 106.772 58.904C107.295 58.3173 107.94 57.8533 108.708 57.512C109.476 57.16 110.378 56.984 111.412 56.984C112.426 56.984 113.316 57.16 114.084 57.512C114.863 57.8533 115.508 58.3173 116.02 58.904C116.532 59.48 116.916 60.12 117.172 60.824C117.439 61.528 117.572 62.2373 117.572 62.952V63.304C117.572 63.9547 117.444 64.632 117.188 65.336C116.943 66.0293 116.564 66.68 116.052 67.288C115.551 67.8853 114.911 68.3707 114.132 68.744C113.364 69.1173 112.458 69.304 111.412 69.304ZM111.412 67.192C112.202 67.192 112.884 67.0107 113.46 66.648C114.036 66.2747 114.479 65.7787 114.788 65.16C115.108 64.5413 115.268 63.8693 115.268 63.144C115.268 62.376 115.108 61.688 114.788 61.08C114.479 60.4613 114.036 59.976 113.46 59.624C112.884 59.272 112.202 59.096 111.412 59.096C110.612 59.096 109.924 59.272 109.348 59.624C108.772 59.976 108.324 60.4613 108.004 61.08C107.695 61.688 107.54 62.376 107.54 63.144C107.54 63.8693 107.695 64.5413 108.004 65.16C108.314 65.7787 108.756 66.2747 109.332 66.648C109.919 67.0107 110.612 67.192 111.412 67.192ZM122.162 69V64.536H121.586L118.066 57.32H120.402L123.01 62.808H123.618L126.002 57.32H128.21L124.962 64.536H124.386V69H122.162ZM127.647 69L131.631 57.32H135.343L139.439 69H137.103L136.031 65.896H130.943L129.919 69H127.647ZM131.583 63.976H135.375L133.759 59.224H133.167L131.583 63.976ZM146.161 69.304C145.159 69.304 144.273 69.1387 143.505 68.808C142.748 68.4667 142.108 68.0133 141.585 67.448C141.073 66.8827 140.684 66.2373 140.417 65.512C140.161 64.7867 140.033 64.0347 140.033 63.256V62.904C140.033 62.168 140.161 61.448 140.417 60.744C140.673 60.04 141.047 59.4053 141.537 58.84C142.039 58.2747 142.652 57.8267 143.377 57.496C144.103 57.1547 144.945 56.984 145.905 56.984C146.919 56.984 147.82 57.176 148.609 57.56C149.409 57.944 150.049 58.4773 150.529 59.16C151.009 59.832 151.292 60.6107 151.377 61.496H149.089C149.015 60.9947 148.828 60.568 148.529 60.216C148.231 59.8533 147.852 59.576 147.393 59.384C146.945 59.192 146.449 59.096 145.905 59.096C145.169 59.096 144.535 59.2667 144.001 59.608C143.468 59.9387 143.057 60.408 142.769 61.016C142.481 61.6133 142.337 62.3067 142.337 63.096C142.337 64.3973 142.679 65.416 143.361 66.152C144.055 66.8773 144.988 67.24 146.161 67.24C146.78 67.24 147.34 67.1333 147.841 66.92C148.353 66.7067 148.769 66.424 149.089 66.072V64.76H145.793V63.064H152.161V64.76H151.185V66.904C150.684 67.672 150.001 68.264 149.137 68.68C148.273 69.096 147.281 69.304 146.161 69.304ZM154.034 69V57.32H161.106V59.24H156.258V62.104H160.818V64.024H156.258V67.08H161.234V69H154.034Z" fill="white"></path><g clipPath="url(#clip0)"><path d="M36.7673 19.5969C39.841 19.5969 42.334 17.9992 42.334 16.0291C42.334 14.7263 41.242 13.587 39.6135 12.9651C39.4114 13.764 38.3025 14.4786 36.8115 14.546C36.7062 14.5106 36.6417 14.4061 36.7656 14.2763C37.3277 13.7353 37.7693 13.0949 37.793 12.5236V6.34691C39.1006 5.91884 40.0465 4.69867 40.0465 3.25603C40.0482 1.4578 38.5793 0 36.7673 0C34.9554 0 33.4864 1.4578 33.4864 3.25603C33.4864 4.69698 34.4323 5.91884 35.7399 6.34691V12.5236C33.157 12.832 31.2007 14.2848 31.2007 16.0291C31.2024 17.9992 33.6936 19.5969 36.7673 19.5969Z" fill="white"></path><path d="M46.7018 63.218C46.0684 63.1876 46.1754 62.4478 46.5931 62.3045C48.0009 61.9236 52.2956 61.4046 56.7398 61.831C56.125 58.5395 54.6816 55.3627 52.5045 52.7218C52.564 50.8106 52.6353 45.4143 51.6605 42.8374C51.2767 41.8245 50.6518 41.4925 50.195 41.3914C49.711 41.2852 48.9468 41.3392 48.0604 42.2004C46.7392 43.4846 45.3925 45.6671 44.5146 47.2327C39.9227 45.8912 33.6445 45.9081 29.3277 47.2698C28.5245 45.6839 27.3341 43.5722 26.1266 42.2829C25.281 41.3813 24.5219 41.2903 24.0328 41.3746C23.5709 41.4538 22.9307 41.7571 22.501 42.7498C21.1849 45.7884 21.1849 52.9611 21.1849 53.2662C21.1849 53.3605 21.2002 53.4532 21.224 53.5392C19.446 56.0318 18.3014 58.9322 17.7988 61.922C22.535 61.3355 27.2967 61.8967 28.7945 62.3028C29.2122 62.4461 29.3209 63.1859 28.6858 63.2163C28.6349 63.1977 22.0018 63.555 17.5712 63.7724C17.5491 64.0556 17.5304 64.3404 17.5186 64.6235C17.4982 65.1493 17.7325 65.6533 18.1435 65.9836C18.3863 66.1791 18.6852 66.4083 19.0452 66.6577C23.7645 66.0089 30.5946 65.0988 30.6455 65.0701C31.3214 64.9758 31.5082 65.7763 30.9444 66.0139C29.6979 66.6173 26.091 67.7818 21.9695 68.343C25.1179 69.8413 30.0376 71.3159 37.2463 71.2502C37.2616 71.2502 37.2752 71.2502 37.2905 71.2502C37.3058 71.2502 37.3194 71.2502 37.3347 71.2502C44.6895 71.3176 49.6584 69.7823 52.7983 68.2537C48.94 67.6655 45.6286 66.5869 44.4449 66.0156C43.8693 65.7796 44.068 64.9791 44.7438 65.0718C44.7914 65.0988 50.9999 65.9263 55.6682 66.5667C55.9688 66.3527 56.2269 66.1555 56.4375 65.9853C56.8485 65.6549 57.0845 65.1527 57.0624 64.6269C57.0506 64.3286 57.0285 64.0303 57.0013 63.732C52.6149 63.5146 46.7494 63.2011 46.7018 63.218ZM49.4852 43.6464C49.5786 43.5554 49.655 43.4947 49.7127 43.4526C49.7246 43.4795 49.7382 43.5115 49.7518 43.5486C50.3359 45.0941 50.4888 48.2051 50.4956 50.632C49.7908 50.0034 49.0351 49.4219 48.2285 48.8995C47.7089 48.5405 47.1128 48.2169 46.4573 47.9304C47.269 46.5097 48.4136 44.6879 49.4852 43.6464ZM23.2686 51.141C23.3705 48.6568 23.6643 45.1851 24.3707 43.552C24.386 43.5166 24.4013 43.4846 24.4149 43.4593C24.4709 43.5031 24.5439 43.5688 24.6339 43.6632C25.6427 44.7384 26.6854 46.5771 27.4275 48.0265C26.8297 48.3248 26.2999 48.6585 25.86 49.031C24.9158 49.6596 24.0532 50.3674 23.2686 51.141ZM29.6759 60.2147C27.7331 60.2147 26.1589 58.639 26.1589 56.6958C26.1589 54.7526 27.7331 53.1768 29.6759 53.1768C31.6186 53.1768 33.1928 54.7526 33.1928 56.6958C33.1928 58.639 31.6186 60.2147 29.6759 60.2147ZM42.1099 62.736C41.2982 63.3292 40.3778 63.5382 39.5185 63.3258C38.7187 63.1286 38.0734 62.5877 37.6454 61.8495C37.2175 62.5893 36.5722 63.1286 35.7723 63.3258C34.913 63.5382 33.9943 63.3275 33.1809 62.736C32.8039 62.4613 32.6748 61.9068 32.8939 61.4989C33.113 61.0911 33.5953 60.9832 33.9723 61.2596C34.4087 61.5782 34.8927 61.6944 35.3342 61.5849C35.9472 61.4332 36.3854 60.8821 36.562 60.1608C35.8046 59.9046 35.2816 59.3754 35.2816 58.7603C35.2816 57.8974 36.3107 57.1963 37.5809 57.1963C38.8511 57.1963 39.8802 57.8957 39.8802 58.7603C39.8802 59.3434 39.4098 59.8507 38.7153 60.1204C38.8851 60.8619 39.33 61.4298 39.955 61.5849C40.3965 61.6944 40.8805 61.5782 41.3169 61.2596C41.6939 60.9849 42.1762 61.0911 42.3952 61.4989C42.616 61.9085 42.4886 62.4613 42.1099 62.736ZM41.9945 56.6958C41.9945 54.7526 43.5687 53.1768 45.5114 53.1768C47.4541 53.1768 49.0283 54.7526 49.0283 56.6958C49.0283 58.639 47.4541 60.2147 45.5114 60.2147C43.5687 60.2147 41.9945 58.639 41.9945 56.6958Z" fill="white"></path><path d="M62.1808 42.7177H61.9125C60.615 42.7177 59.5639 41.6745 59.5639 40.3869V40.1796C59.5639 40.0162 59.4314 39.8847 59.2667 39.8847C59.102 39.8847 58.9695 40.0162 58.9695 40.1796V40.3869C58.9695 41.6745 57.9183 42.7177 56.6209 42.7177H56.3526C56.1879 42.7177 56.0554 42.8492 56.0554 43.0127C56.0554 43.1761 56.1879 43.3076 56.3526 43.3076H56.6209C57.9183 43.3076 58.9695 44.3508 58.9695 45.6384V45.8457C58.9695 46.0091 59.102 46.1406 59.2667 46.1406C59.4314 46.1406 59.5639 46.0091 59.5639 45.8457V45.6384C59.5639 44.3508 60.615 43.3076 61.9125 43.3076H62.1808C62.3455 43.3076 62.478 43.1761 62.478 43.0127C62.478 42.8509 62.3455 42.7177 62.1808 42.7177Z" fill="white"></path><path d="M13.4309 41.9122C13.2152 41.7504 12.9079 41.7908 12.7432 42.0015C12.553 42.2442 8.14109 48.04 11.4865 55.6761C11.5595 55.8447 11.7209 55.9509 11.8941 55.966C11.9722 55.9728 12.0537 55.961 12.1318 55.9289C12.3814 55.8245 12.4969 55.5413 12.3899 55.2969C11.9331 52.801 11.7175 50.6708 11.8941 48.7781C12.2388 45.0822 13.4836 42.6419 13.5243 42.588C13.689 42.3756 13.6466 42.0739 13.4309 41.9122Z" fill="white"></path><path d="M68.9038 39.0134C68.8885 39.0117 68.8732 39.01 68.8579 39.0084C65.9982 28.5796 57.1133 20.3148 45.7524 17.4397C45.282 17.32 44.7896 17.5779 44.6367 18.0346C43.8742 20.3047 40.6952 22.0069 36.8896 22.0069C33.084 22.0069 29.905 20.3047 29.1425 18.0346C28.988 17.5779 28.4972 17.32 28.0268 17.4397C17.9328 19.9946 9.79682 26.805 6.10157 35.6074C5.73476 36.5663 5.34928 37.6904 5.01304 38.9258C0.285295 38.9544 0 44.0019 0 46.262C0 48.827 0.419451 53.0605 4.07394 53.6908H5.01134C5.69061 57.9361 7.52974 61.8781 10.2995 64.7533C15.9884 71.0749 26.2692 75.0017 37.1342 75.0017C48.5086 75.0017 58.1577 71.5249 63.6139 65.4628C66.472 62.4966 68.469 58.1603 69.2264 53.6908H69.3283C69.3351 53.6436 69.3419 53.5965 69.347 53.5526C70.337 53.4043 71.0401 53.3352 71.952 52.6527C73.4023 51.5657 73.9966 49.0292 73.9966 46.2636C74 44.0019 74 38.9544 68.9038 39.0134ZM62.3878 64.3151L62.3675 64.337C57.2339 70.0502 48.0382 73.3265 37.1376 73.3265C26.7328 73.3265 16.9292 69.6103 11.5527 63.6275L11.5324 63.6056C7.67069 59.6046 5.77892 53.3184 6.59404 47.199C7.25124 42.261 9.84606 34.3367 19.7125 34.3367C20.3612 34.3367 21.0422 34.3704 21.7537 34.4428L21.7724 34.4445C27.1268 34.8591 32.6934 35.2434 37.1376 35.2434C41.096 35.2434 46.8444 34.9451 52.5214 34.4445C64.6753 33.2227 67.1971 43.7727 67.6828 47.0355C68.5641 52.956 66.3361 60.2231 62.3878 64.3151Z" fill="white"></path></g><defs><clipPath id="clip0"><rect width="74" height="75" fill="white"></rect></clipPath></defs></svg>
          </div>
          
            
              <div className='flex items-center justify-center gap-2 flex-col'>
                 <p className="text-sm">
                  MCV Twitter Banners, with support for multiple voyagers!
                </p>
                <p className="text-sm">
                  <a href='https://opensea.io/InvaderETH' className='text-green-600'>Donate a spare 🪐🐱 here</a> and we will train them to program cool tools like this.
                </p>
                </div>
           
            
            
            {loading && (
              <a>
                Grooming your new image. This may take up to a minute...
              </a>
            )}
           {finished ? (
             <div className='flex gap-6 flex-col'>
               <img className='' alt='finalimage' src={finalimg}/>
               <div className="flex flex-row gap-4">
                            <a download={String(`nightkids_${imgid}.jpg`)} href={finalimg}>

                <button className="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded">
                  Save Banner
                </button>
              </a>
              <button
                onClick={handleReset}
                className="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded"
              >
                Reset
              </button>
            </div>
             </div>
            
          ) : (
             <form
              name="imggen"
              onSubmit={generateImg}
              className="flex flex-col gap-2 justify-center items-center"
            >
              <div className="grid grid-cols-1 w-full  gap-2 mb-4">
                <label className="flex flex-col block text-left w-full h-full">
                  <span
                    className="text-gray-200 text-opacity-60 text-sm"
                    hidden={loading}
                  >
                    Cat ID #1
                  </span>
                  <input
                    className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                    id="number"
                    type="number"
                    placeholder="ex. 3664"
                    hidden={loading}
                    value={imgid}
                    onChange={(e) => setImgid(e.target.value)}
                  />
                </label>
              </div>
              <button
                type="submit"
                value="Submit"
                className="w-full bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded"
                hidden={loading}
              >
                Generate
              </button>
            </form>
          )}
           
        </div>
      </div>
      </div>
    </div>
  )
}

export default Home
